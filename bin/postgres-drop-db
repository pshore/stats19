#!/bin/sh

# Drop the database.
#
# Command line options:
#
# -q          Ignore any errors if the database does not exist.
#
# -f          Do not prompt for confirmation, just drop the database.
#
# -db <name>  Specify the name of the database to drop. This defaults
#             to the DB_NAME value specified in this script."

#default database name
DB_NAME=stats19

DIRNAME=`dirname "$0"`
. $DIRNAME/postgres-functions

QUIET=0
NOPROMPT=0

while [ $# -ge 1 ] ; do
    case "$1" in
      -q)
        QUIET=1
        shift
        ;;
      -f)
        NOPROMPT=1
        shift
        ;;
      -db)
        shift
        DB_NAME=$1
        shift
        ;;
      *)
        echo Usage: postgres-drop-db [-q] [-db <name>]
        exit 1
        ;;
    esac
done

db_exists $DB_NAME

if [ $? -ne 0 ] ; then
    [ $QUIET -ne 0 ] && exit 0
    echo "ERROR:  database \"$DB_NAME\" does not exist"
    exit 1
fi

if [ $NOPROMPT -eq 0 ] ; then
    echo
    echo "This will delete all the data from the database \"$DB_NAME\"!"
    read -a RESPONSE -p "Are you sure you want to continue (y/n)? "

    if [ $RESPONSE != "y" -a $RESPONSE != "Y" ] ; then
        echo "Giving up..."
        exit 0
    fi
fi

psql postgres postgres -c "DROP DATABASE $DB_NAME;"
